def predict(parameters, X):
    A2, _ = forward_propagation(X, parameters)
    predictions = np.argmax(A2, axis=0)
    return predictions

def main():
    # Load the dataset
    iris = load_iris()
    X = iris.data
    y = iris.target.reshape(-1, 1)
    
    # One-hot encode the target variable
    encoder = OneHotEncoder(sparse=False)
    y = encoder.fit_transform(y)
    
    # Split the dataset into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    
    # Train the neural network
    n_h = 10  # Number of hidden units
    parameters = model(X_train, y_train, n_h, num_iterations=10000, learning_rate=0.01)
    
    # Make predictions on the test set
    predictions = predict(parameters, X_test)
    accuracy = np.mean(predictions == np.argmax(y_test, axis=1)) * 100
    print(f"Test set accuracy: {accuracy}%")

if __name__ == "__main__":
    main()
